(-1/81)/(sqrt(.08024691)*sqrt(.2839506))
9*4+16*6+36*8+48+36
3*12+4*-4+6*42
factorial(10)/((factorial(2))^3 * factorial(4))
18900 * .20^2 * .18^2 * .21^2 * .41^4
choose(10,5)*(.38^5)*(.62^5)
-.82/(sqrt(1.6)*sqrt(2.419))
pnorm(160,150,6)
2*15^3
6750/56
6750/45
225*5
225*4
900/6
15^5/225
3375-2(15^6)/(2*900)+(15^7)/(7*75)
3375-2(15^6)/(2*900)+((15^7)/(7*75))
3375-2*(15^6)/(2*900)+((15^7)/(7*75))
15*225
3375/5
80/225
factorial(5) / (factorial(2) * factorial(2))
225*15
3375*15
225*15*15
(15^4)/(4*3375) - (2*15^5)/(5*50625)+(15^6)/(6*50625)
(15^4)/(4*3375) - (2*(15)^5)/(5*50625)+(15^6)/(6*50625)
15*15
225*15*225
(15^4)/(4*3375) - (2*(15)^5)/(5*50625)+(15^6)/(6*759375)
30*.25
(-5)^(-12)
1- .Last.value
(-5)^(-9)
1-.la
1-.Last.value
-5^-3
-5^-3 + 1
.992^3
.Last.value - 1
.04*25+.2*32.5+.25*40+.12*45+.3*52.5+.09*65
25*.20+40*.50
25*.20+40*.50+65*.30
-19.5*.04-12*.2-4.5*.25+.5*.12+8*.3+20.5*.09
-19.5*.04-12*.2-4.5*.25+.5*.12+8*.3+20.5*.09
(25-44.5)^2 + (40-44.5)^2 + (65-44.5)^2
.20*(25-44.5)^2 + .50*(40-44.5)^2 + .30*(65-44.5)^2
27*(200)+125*(250)+512*(100)
27^2 * (100)+  125^2 * (144) + 512^2 * (8)
27^2 * (10)+  125^2 * (12) + 512^2 * (8)
pnorm(100000,87850,sqrt(2291942))
sqrt(2291942)
pnorm(.5,0,1)
pnorm(100000, 87850, 1513.916)
27^2 * (100)+  125^2 * (144) + 512^2 * (64)
sqrt(.Last.value)
pnorm(100000, 87850, .Last.value)
.Last.value-1
20-63/3
.25*8 - (1/9)*(3.5*3)
pnorm(0, -1, sqrt(.8333))
1- .Last.value
pnorm(1, -1, sqrt(.8333)) - pnorm(-1, -1, sqrt(.8333))
pnorm(1, -1, sqrt(.8333))
16*12
16^2 * 0.04^2
(0.04^2)/16
(0.04^2)/64
pnorm(12.01, mean = 12, 1e-04) - pnorm(11.99, mean = 12, 1e-04)
pnorm(12.01, mean = 12, 0.04/4) - pnorm(11.99, mean = 12, 0.04/4)
8.3+9.8-7
source("~/Desktop/R /442 PROJECT 1.R", echo=TRUE)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr2")
install.packages("dplyr2")
which R
which(r)
R.version
install.packages("blogdown")
getwd()
setwd("/Users/e/Desktop/R")
getwd()
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(onewaytests)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(cowplot)
library(knitr)
knitr::include_graphics('456hw4-PIC1.png', error = FALSE)
blogdown::serve_site()
blogdown:::preview_site()
View(qq)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(onewaytests)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(cowplot)
library(knitr)
tab <- read.table("CH01PR19.txt", col.names=c("GPA", "ACT"))
n <- nrow(tab)
lm1<- lm(GPA~ACT, data=tab)
tab <- tab %>% mutate(fitted = fitted(lm1),
group = factor(ifelse(ACT < 26, 1, 2)),
resid = tab$GPA-fitted(lm1)
)
ggplot(tab, aes(x= ACT))+geom_boxplot(outliers=TRUE)+theme_classic()
ggplot(data=tab, aes(sample=resid))+stat_qq()+stat_qq_line()+theme_classic()
MSE <- sum(tab$resid^2)/(n-2)
qq <- data.frame(resid_sort = sort(unname(tab$resid)),
rank = 1:nrow(tab),
exp_val = sqrt(MSE)*qnorm(((1:nrow(tab))-.375)/(n+.25), 0, 1)
)
head(qq); tail(qq)
cor(qq$resid_sort, qq$exp_val)
resid_plot <-ggplot(lm1, aes(x = .fitted, y = .resid)) +
geom_point() + geom_smooth()+
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuals vs. Fitted Values Plot",
x = "Fitted Values",
y = "Residuals") +
theme_classic()
points <- ggplot(tab, aes(x=ACT, y=GPA))+geom_smooth(formula = y~x, method="lm")+geom_point()+theme_classic()
aligned_polarity <- align_plots(resid_plot, points, align="h")
grid.arrange(ggdraw(aligned_polarity[[1]]), ggdraw(aligned_polarity[[2]]), ncol=2)
# lm2 <- lm(GPA~ACT, data=tab[-c(2, 9, 101,115),])
# resid_plot <-ggplot(lm2, aes(x = .fitted, y = .resid)) +
#   geom_point() + geom_smooth(method="loess")+
#   geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#   labs(title = "Residuals vs. Fitted Values Plot",
#        x = "Fitted Values",
#        y = "Residuals") +
#   theme_classic()
#
# points <- ggplot(tab[-c(2, 9, 101,115),], aes(x=ACT, y=GPA))+geom_smooth(formula = y~x, method="lm")+geom_point()+theme_classic()
#
# resid_plot
# points
#indexes
tab_g <- group_split(tab %>% group_by(group))
tab_1 <- tab_g[[1]] %>% mutate(d = abs(resid - median(resid)),
ssd = (d-mean(d))^2) %>% arrange(ACT)
tab_2 <- tab_g[[2]] %>% mutate(d = abs(resid - median(resid)),
ssd = (d-mean(d))^2) %>% arrange(ACT)
s_sq <- (sum(tab_1$ssd) + sum(tab_2$ssd))/(n-2)
t <- (mean(tab_1$d) - mean(tab_2$d))/(sqrt(s_sq) * sqrt(1/nrow(tab_1) + 1/nrow(tab_2)))
pt(t, df=n-2, lower.tail=TRUE)*2
A <- matrix(c(4,7,2,3), nrow=2, byrow=TRUE)
b <- c(25,12)
A_inv <- solve(A)
y <- A_inv %*% b; y
View(qq)
MSE
sum((tab$GPA - tab$fitted))^2
sum((tab$GPA - tab$fitted)^2)
sum((tab$GPA - tab$fitted)^2)/(n-2)
MSE
n
getwd()
setwd(paste0(.Last.value,"/stats_blog"))
getwD()
getwd
getwd()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
